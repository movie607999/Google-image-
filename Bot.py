# Google-image-
import time
import requests
from telegram import Update
from telegram.ext import Updater, MessageHandler, Filters, CallbackContext

IMDB_API_KEY = "1492c80ab5mshb1f8de5ef9db734p1baa7fjsnd403fecaf8d1""
TELEGRAM_BOT_TOKEN = "7882826836:AAGX2Wu3Gs6GFuLD2mooP4BIpO_2ulvG2yg"

# IMDb API ‡¶•‡ßá‡¶ï‡ßá ‡¶Æ‡ßÅ‡¶≠‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
def get_movie_info(movie_name):
    url = f"https://imdb8.p.rapidapi.com/title/find?q={movie_name}"
    
    headers = {
        "X-RapidAPI-Key": IMDB_API_KEY,
        "X-RapidAPI-Host": "imdb8.p.rapidapi.com"
    }
    
    response = requests.get(url, headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        try:
            movie = data['results'][0]
            title = movie.get('title', 'N/A')
            image = movie.get('image', {}).get('url', 'No Image')
            rating = movie.get('rating', 'N/A')
            
            return f"üé¨ {title}\n‚≠ê IMDb Rating: {rating}", image
        except IndexError:
            return "‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø!", None
    else:
        return "API Error!", None

# ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ (Delay ‡¶∏‡¶π)
def handle_message(update: Update, context: CallbackContext):
    movie_name = update.message.text.strip()
    update.message.reply_text(f"üîé ‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: {movie_name}...")

    movie_info, image_url = get_movie_info(movie_name)
    
    if image_url:
        update.message.reply_photo(photo=image_url, caption=movie_info)
    else:
        update.message.reply_text(movie_info)

    # **‡¶°‡¶ø‡¶≤‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ (‡¶Ø‡¶æ‡¶§‡ßá IMDb ‡¶¨‡¶ü ‡¶Ü‡¶ó‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¶‡ßá‡ßü)**
    time.sleep(3)  # 3 ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá (‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶¨‡¶ü ‡¶™‡¶∞‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¶‡ßá‡¶¨‡ßá)

# ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
def main():
    updater = Updater(TELEGRAM_BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
